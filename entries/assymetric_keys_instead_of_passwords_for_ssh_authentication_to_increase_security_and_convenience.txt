Assymetric keys instead of passwords for SSH authentication to increase security and convenience
# pubdate 2007-07-14
# pubtime 20:22:38
# tags linux,foss
# guid 26 at http://dieter.plaetinck.be
<p>I've been using <a href="http://www.openssh.com/">OpenSSH</a> already for a while and although I've seen mentions of "public key authentication" and "RSA encryption" several times in it's config files, I never decided to figure out what it did exactly, and stuck to password authentication.  But now the guys at work explained how it works and after reading more about it, I'm totally hooked on it!</p>
<p>It's a feature in ssh protocol version 2 (thus it's around for already a while, e.g. we can all use it without updating something) which essentially comes down to this: you generate an asymmetric key pair and distribute the public key to all remote hosts. When logging in to that host, the host will encrypt a random integer, which only you can decrypt (using the private key) and hence prove your identity.  Too secure your private key you'll store it encrypted with a password.  Ssh-agent (which is bundled with openssh) is the tool that interacts with ssh to perform this task: when logging in to a host, ssh-agent will open the private key for you automatically <em>if it can decrypt it with the password it receives from you</em>  But the problem is you'll have to load (enter your password and decrypt the key) each time again.</p>
<p>This is where <a href="http://www.gentoo.org/proj/en/keychain/index.xml">keychain</a> comes in, or you can use <a href="http://www.phil.uu.nl/~xges/ssh/">SSH Agent</a> (don't confuse this with the ssh agent that comes with openssh) if you're a Mac user and like gui's.  These tools basically ask you your passwords for all private keys you wish to use in a session (with session I mean "the whole time of using your computer"), decrypt the encrypted key on your hard disk and cache the decrypted key in ram, so it can be used in all terminals you open.</p>
<p>For more information:<br />
<a href="http://www.ibm.com/developerworks/library/l-keyc.html">OpenSSH key management, Part 1: Understanding RSA/DSA authentication</a><br />
<a href="http://www.ibm.com/developerworks/library/l-keyc2/">OpenSSH key management, Part 2: Introducing ssh-agent and keychain</a><br />
<a href="http://www.ibm.com/developerworks/linux/library/l-keyc3/">OpenSSH key management, Part 3: Agent forwarding and keychain improvements</a> (freaks only ;-))</p>
<p>Have fun</p>
