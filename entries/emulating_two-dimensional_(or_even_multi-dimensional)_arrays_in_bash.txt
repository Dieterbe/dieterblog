Emulating two-dimensional (or even multi-dimensional) arrays in bash
# pubdate 2007-08-26
# pubtime 12:49:42
# tags bash
<p>Ever needed to use arrays of two or more dimensions but got stuck on Bash limited array support which provides only 1 dimension?</p>
<p>There is a trick that let's you dynamically create variable names.  Using this, you can emulate additional dimensions.<br />
<!--break--></p>
<p>Here's a simple example for an array with 2 dimensions:<br />
<code lang="bash"><br />
#set the value of my_array[i][j] where i = 25 and j = 10 to "value"</p>
<p>var="my_array25-10"<br />
#or like this: I=25;J=10;var="my_array$I-$J"</p>
<p>declare $var="value"<br />
</code><br />
<code lang="bash"><br />
#retrieve the value of my_array[i][j] where i = 5 and j = 10<br />
var="my_array5-10"<br />
#or like this: I=5;J=10;var="my_array$I-$J"<br />
echo ${!var}<br />
</code></p>
<p>Thanks to the guys from #bash on freenode for their help and their excellent <a href="http://wooledge.org/mywiki/BashFAQ">bash faq</a></p>
