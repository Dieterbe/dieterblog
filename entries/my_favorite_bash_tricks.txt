My favorite bash tricks
# pubdate 2007-03-14
# pubtime 23:38:54
# tags linux,foss,bash,productivity
<p>Hello everyone.<br />
This post is about <a href="http://www.gnu.org/software/bash/">bash</a>, the shell providing so many users easy access to the underlying power of their system.<br />
(not <a href="http://www.bash.org/">bash</a> the quote database, although i really like that website too ;-) )<br />
Most people know the basics, but getting to know it better can really increase your productivity.  And when that happens, you might start loving bash as much as I do ;-)</p>
<p>I assume you have a basic knowledge of bash, the history mechanism, and  ~/.bash* files.<br />
So here they are, my favorite tricks, key combo's and some bonus stuff:</p>
<h3>Tricks</h3>
<ul>
<li>"cd -" takes you back to the previous directory, wherever that was.  Press again to cycle back.</li>
<li>putting arguments between braces {like,so} will execute the command multiple times, once for each "argument".  Bash will make the cartesian product when doing it multiple times in 1 expression.  Some less-obvious tricks with this method are mentioned <a href="http://www.bhaskarvk.info/technology/bash-tricks.html">here</a></li>
<li>HISTIGNORE : with this variable you have control over which things are being saved in your history.  <a href="http://www.talug.org/events/20030709/cmdline_history.html">Here</a> is a nice explication.  Especially the space trick is very useful imho.</li>
<li>CD_PATH : <a href="http://www.caliban.org/bash/">Here</a> is a great explanation ;-)</li>
<li>readline (library used by bash) trick:  put this in your ~/.inputrc (or /etc/inputrc) :<br />
<code>
"\e[5~": history-search-backward
"\e[6~": history-search-forward
</code><p>This way you can do *something*+pageup/pagedown to cycle through your history for commands starting with *something*<br />
You can use the up/down arrows too, their codes are "\e[A" and "\e[B"
</li>
<li>for more "natural" history saving behavior (when having several terminals open): put this in .bash_profile: <br/><br />
<code>PROMPT_COMMAND='history -a'</code><p> (write each command separately in a new entry, instead of all at shell exit).<br />
And type </p>
<code>shopt -s histappend</code><p> to append instead of overwrite. (this might be default on some distro's.  I think it was on Gentoo)</li>
</ul>
<h3>Shortcuts/keycombos</h3>
<ul>
<li>ctrl+r : search through your history.  Repeatedly press ctrl+r to cycle through hits.</li>
<li>ctrl-u : cut everything on the current line before the cursor.</li>
<li>ctrl-y : paste text that was cut using ctrl-u. (starting at the cursor)</li>
<li>!$: equals the last word of the previous command. (great when performing several operations on the same file)</li>
</ul>
<h3>Bonus material</h3>
<ul>
<li><a href="http://www.caliban.org/bash/index.shtml#completion">Bash completion</a>, an add-on for bash which adds completion for arguments of your commands.  It's pretty smart and configurable.  (it's in portage, and probably in repos of all popular distros out there)</li>
<li><a href="http://n01se.net/agriffis/nopaste/">This script</a> provides you an interface to the <a href="http://rafb.net/paste/">rafb pastebin</a>!</li>
<li>Recursively delete all .svn folders in this folder, and in folders below. "find . -name .svn -print0 | xargs -0 rm -rf"</li>
<li>Recursively count number of files in a directory: "find -not -type d | wc -l"</li>
</ul>
<h3>Conclusion</h3>
<p>Those were all important tricks I'm currently using.  On the web you'll find lots more useful tips :-).<br />
If that still isn't enough, there is also <a href="http://www.gnu.org/software/bash/manual/bashref.html">man bash</a> :o</p>
<p>With aliases and scripts (and involving tools like sed or awk) the possibilities become pretty much endless.  But for that I refer to <a href="http://tldp.org/LDP/abs/html/">tldp.org</a> and your favorite web search engine.</p>
