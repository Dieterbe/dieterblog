<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>netlog on Dieter&#39;s blog</title>
    <link>http://dieter.plaetinck.be/tags/netlog/</link>
    <description>Recent content in netlog on Dieter&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 May 2008 12:39:28 -0400</lastBuildDate>
    <atom:link href="/tags/netlog/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Announcing the Netlog Developer Pages</title>
      <link>http://dieter.plaetinck.be/post/announcing_the_netlog_developer_pages/</link>
      <pubDate>Sat, 24 May 2008 12:39:28 -0400</pubDate>
      
      <guid>43 at http://dieter.plaetinck.be</guid>
      <description>&lt;p&gt;At work, we&#39;ve setup the &lt;a href=&#34;http://netlog.com/go/developer&#34;&gt;Netlog Developer Pages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is the place where you can/will find all information around our OpenSocial implementation, our own API, skin development, sample code and so on.&lt;br /&gt;
We&#39;ve also launched a &lt;a href=&#34;http://en.netlog.com/go/developer/group&#34;&gt;group&lt;/a&gt; where you can communicate with fellow developers and Netlog employees.&lt;br /&gt;
The page also features a &lt;a href=&#34;http://en.netlog.com/go/developer/blog&#34;&gt;blog&lt;/a&gt; where you can follow what is going on in the Netlog Tech team.&lt;/p&gt;
&lt;p&gt;PS: We&#39;ve also updated our &lt;a href=&#34;http://en.netlog.com/go/inside/view=jobs&#34;&gt;jobs page&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I survived LCL 31-3-2008</title>
      <link>http://dieter.plaetinck.be/post/i_survived_lcl_31_3_2008/</link>
      <pubDate>Sat, 19 Apr 2008 12:10:11 -0400</pubDate>
      
      <guid>41 at http://dieter.plaetinck.be</guid>
      <description>&lt;/p&gt;
&lt;p&gt;Long story short: LCL couldn&#39;t bring the power back up fast enough so we rented our own generator.  After rushing to Brussels we ( The Netlog ITS-team) could sit in the offices upstairs.  But after a while they had to close it down but we could stay in a room nearby (without furniture).   After that we went to Steven&#39;s appartment in Machelen.  We worked about 30 hours in a row, getting our sites back up and running (mostly fixing corrupted databases).  Our friends from the devteam also did some great achievements the next day, by using the redundancy of denormalized database layouts they could restore nearly all missing content that had vanished because of table repairs.&lt;/p&gt;
&lt;p&gt;Here is some footage:&lt;/p&gt;
&lt;h3&gt;Netlog homepage&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#39;http://dieter.plaetinck.be/files/blog/netlog/23296980.jpg&#39;&gt;&lt;br /&gt;
&lt;a href=&#34;http://dieter.plaetinck.be/files/blog/flickr/2378844832_7163d9b28b_o.png&#34;&gt;hi-res version&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;At LCL&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#39;http://dieter.plaetinck.be/files/blog/netlog/22103670_10474680_23396287.jpg&#39;&gt;&lt;br /&gt;
Toon &amp;amp; Nicolas&lt;/p&gt;
&lt;p&gt;&lt;img src=&#39;http://dieter.plaetinck.be/files/blog/netlog/22103670_3331347_23396512.jpg&#39;&gt;&lt;br /&gt;
Kenny&lt;/p&gt;
&lt;p&gt;&lt;img src=&#39;http://dieter.plaetinck.be/files/blog/netlog/22103670_7040556_23396414.jpg&#39;&gt;&lt;br /&gt;
Steven - Jakob - Lorenz&lt;/p&gt;
&lt;p&gt;&lt;img src=&#39;http://dieter.plaetinck.be/files/blog/netlog/22103670_15039122_24732436.jpg&#39;&gt;&lt;br /&gt;
Jakob - Steven - me - Kenny&lt;/p&gt;
&lt;h3&gt;At Steven&#39;s appartment&lt;/h3&gt;
&lt;p&gt;No pics made here, just a silly video ;)&lt;/p&gt;
&lt;p&gt;&lt;object width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;br /&gt;
&lt;param name=&#34;movie&#34; value=&#34;http://www.youtube.com/v/pnsCiypcBPk&amp;amp;hl=en&#34;&gt;&lt;/param&gt;
&lt;param name=&#34;wmode&#34; value=&#34;transparent&#34;&gt;&lt;/param&gt;&lt;embed src=&#34;http://www.youtube.com/v/pnsCiypcBPk&amp;amp;hl=en&#34; type=&#34;application/x-shockwave-flash&#34; wmode=&#34;transparent&#34; width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tweaking Lighttpd stat() performance with fcgi-stat-accel</title>
      <link>http://dieter.plaetinck.be/post/tweaking_lighttpd_stat_performance_with_fcgi-stat-accel/</link>
      <pubDate>Mon, 03 Mar 2008 21:12:42 -0400</pubDate>
      
      <guid>38 at http://dieter.plaetinck.be</guid>
      <description>&lt;br/&gt;
(in Lighty 1.5 there will be a native way for asynchronous stat() calls but for 1.4 this hack works pretty damn well)&lt;/p&gt;
&lt;p&gt;This is explained on the &lt;a href=&#34;http://trac.lighttpd.net/trac/wiki/HowtoSpeedUpStatWithFastcgi&#34;&gt; HowtoSpeedUpStatWithFastcgi&lt;/a&gt; page on the &lt;a href=&#34;http://trac.lighttpd.net/trac/&#34;&gt; Lighty wiki&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, for &lt;a href=&#34;http://www.netlog.com&#34;&gt;Netlog&lt;/a&gt; we needed to add some http headers ( Cache-Control: max-age, ETag, Expires and Last-Modified ) so we patched up the code a bit to do that, and a bit of other stuff.&lt;/p&gt;
&lt;p&gt;Ofcourse this is documented on &lt;a href=&#34;http://trac.lighttpd.net/trac/wiki/FcgiStatAccelWithMoreHttpHeaders&#34;&gt;the FcgiStatAccelWithMoreHttpHeaders page on the Lighty wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Have fun !&lt;/p&gt;
{{&lt; highlight &#34;c&#34; &#34;style=default&#34; &gt;}}
/*
  Originally written by Fobax.
  Edited by darix to support controlling thread count at runtime. 
  Edited by poison and Dieter_be to support some http headers derived from the files.

  Please do not remove any of the above.
  
  compile with: 

  $ gcc -lfcgi -lpthread fcgi-stat-accel.c -o fcgi-stat-accel

  fcgi-stat-accel will use the PHP_FCGI_CHILDREN environment variable to set the thread count.

  The default value, if spawned from lighttpd, is 20.
*/

#include &#34;fcgi_config.h&#34;

#include &lt;pthread.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;unistd.h&gt;   
#include &#34;fcgiapp.h&#34;  
#include &lt;string.h&gt;   
#include &lt;sys/types.h&gt;
#include &lt;sys/stat.h&gt; 

#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt; 

#include &#34;etag.h&#34;
#include &#34;buffer.h&#34;


#define THREAD_COUNT 20


#define FORBIDDEN(stream) \
        FCGX_FPrintF(stream, &#34;Status: 403 Forbidden\r\nContent-Type: text/html\r\n\r\n&lt;h1&gt;403 Forbidden&lt;/h1&gt;\n&#34;);
#define NOTFOUND(stream, filename) \
        FCGX_FPrintF(stream, &#34;Status: 404 Not Found\r\nContent-Type: text/html\r\n\r\n&lt;h1&gt;404 Not Found&lt;/h1&gt;\r\n%s&#34;, filename);
#define SENDFILE(stream, filename, headers) \
        FCGX_FPrintF(stream, &#34;%sX-LIGHTTPD-send-file: %s\r\n\r\n&#34;, headers, filename);

#define EXPIRATION_TIME (int) 60*60*24*30


int genheaders (char* mybuffer, size_t bufferlen, const char* file)
{
        char timebuf[32]; //possibly unsafe   
        char lastmodbuf[32]; //possibly unsafe
        char etag[128]; //possibly unsafe
        struct stat statbuf;
        time_t exp;
        time_t lastmod;  
        buffer *etag_raw;
        buffer *etag_ok ;
 
        //create buffers for Etag
        etag_raw = buffer_init();
        etag_ok = buffer_init();
                
        // Stat the file
        if (stat (file, &amp;statbuf) != 0)
        {
                return -1;
        }

        // Clear the buffer
        memset (mybuffer, 0, bufferlen);

        // Get the local time
        exp = time (NULL) + EXPIRATION_TIME;
        lastmod = statbuf.st_mtime;

        strftime (timebuf, (sizeof (timebuf) / sizeof (char)) - 1, &#34;%a, %d %b %Y %H:%M:%S GMT&#34;, gmtime (&amp;(exp)));
        strftime (lastmodbuf, (sizeof (lastmodbuf) / sizeof (char)) - 1, &#34;%a, %d %b %Y %H:%M:%S GMT&#34;, gmtime (&amp;(lastmod)));

        etag_create(etag_raw, &amp;statbuf, ETAG_USE_SIZE);
        etag_mutate(etag_ok, etag_raw);

        buffer_free(etag_raw);

        snprintf (mybuffer, bufferlen, &#34;Cache-Control: max-age=%d\r\nETag: \%s\r\nExpires: %s\r\nLast-Modified: %s\r\n&#34;, EXPIRATION_TIME, etag_ok-&gt;ptr, timebuf , lastmodbuf);

        buffer_free(etag_ok);

        return 0;
}
 
static void *doit(void *a){
        FCGX_Request request;
        int rc;
        char *filename;
        char extraheaders[192];
        int r;

        FCGX_InitRequest(&amp;request, 0, FCGI_FAIL_ACCEPT_ON_INTR);

        while(1){
                //Some platforms require accept() serialization, some don&#39;t. The documentation claims it to be thread safe
//              static pthread_mutex_t accept_mutex = PTHREAD_MUTEX_INITIALIZER;
//              pthread_mutex_lock(&amp;accept_mutex);
                rc = FCGX_Accept_r(&amp;request);
//              pthread_mutex_unlock(&amp;accept_mutex);

                if(rc &lt; 0)
                        break;

        //get the filename
                if((filename = FCGX_GetParam(&#34;SCRIPT_FILENAME&#34;, request.envp)) == NULL){
                        FORBIDDEN(request.out);
        //don&#39;t try to open directories
                }else if(filename[strlen(filename)-1] == &#39;/&#39;){
                        FORBIDDEN(request.out);
        //open the file
                }else if((r = genheaders (extraheaders, 191, filename)) != 0){
                        NOTFOUND(request.out, filename);
        //no error, serve it
                }else{
                        SENDFILE(request.out, filename, extraheaders);
                }

                FCGX_Finish_r(&amp;request);
        }
        return NULL;
}

int main(void){
        int i,j,thread_count;
        pthread_t* id;
        char* env_val;

        FCGX_Init();

        thread_count = THREAD_COUNT;
        env_val = getenv(&#34;PHP_FCGI_CHILDREN&#34;);
        if (env_val != NULL) {
                j = atoi(env_val);
                if (j != 0) {
                        thread_count = j;
                };
        };

        id = malloc(sizeof(*id) * thread_count);

        for (i = 0; i &lt; thread_count; i++) {
                pthread_create(&amp;id[i], NULL, doit, NULL);
        }

        doit(NULL);
        free(id);  
        return 0;  
}
{{&lt; /highlight &gt;}}
</description>
    </item>
    
    <item>
      <title>I&#39;m not going to Fosdem 2008</title>
      <link>http://dieter.plaetinck.be/post/im_not_going_to_fosdem_2008/</link>
      <pubDate>Tue, 12 Feb 2008 20:37:50 -0400</pubDate>
      
      <guid>37 at http://dieter.plaetinck.be</guid>
      <description>&lt;br /&gt;
Fosdem looks interesting again : talks about iogrind , scons , cakephp , virtualbox , openAFS , ...&lt;br /&gt;
No Gentoo devroom this year but drupal , debian , embedded , X , gnome rooms would have interested me too ( mostly gtk/glib for the latter )&lt;/p&gt;
&lt;p&gt;Oh and about the reason I&#39;m not going?  The &lt;a href=&#34;http://corporate.netlog.com&#34;&gt;company&lt;/a&gt; is taking us to &lt;a href=&#34;http://www.valdisole.it/&#34;&gt;Val di Sole&lt;/a&gt; where we will ski, snowboard and apres-ski for 4 days !  w00t ! This kicks even more ass then Fosdem :P&lt;/p&gt;
&lt;p&gt;PS : I&#39;m considering going to &lt;a href=&#34;http://lac.linuxaudio.org/&#34;&gt;LAC 2008&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nagios monitoring in your desktop panel aka Xfce Genmon panel plugin rules!</title>
      <link>http://dieter.plaetinck.be/post/nagios_monitoring_in_your_desktop_panel_aka_xfce_genmon_panel_plugin_rules/</link>
      <pubDate>Sun, 05 Aug 2007 16:42:46 -0400</pubDate>
      
      <guid>29 at http://dieter.plaetinck.be</guid>
      <description>&lt;br /&gt;
First of all take &lt;a href=&#34;http://www.xfce.org&#34;&gt;Xfce&lt;/a&gt;: a lightweight but sleek and flexible Desktop Environment.  Then take a look at the &lt;a href=&#34;http://goodies.xfce.org/&#34;&gt;Xfce Goodies project&lt;/a&gt;, more specifically the &lt;a href=&#34;http://goodies.xfce.org/projects/panel-plugins/start&#34;&gt;Panel Plugins&lt;/a&gt; page.  There are plenty of panel plugins to make your life easier: they check your mail, you can control your media player, they can show how your pc performs, built-in dictionaries, translate tools or command lines, show weather forecasts and so on.&lt;/p&gt;
&lt;p&gt;Now, for &lt;a href=&#34;http://corporate.netlog.com&#34;&gt;work&lt;/a&gt; I need to keep an eye on &lt;a href=&#34;http://www.nagios.org/&#34;&gt;Nagios&lt;/a&gt;, (Nagios is a great FOSS host/service monitoring web application) but I don&#39;t like periodically checking the same webpage over and over again:&lt;br /&gt;
news should come to me, not the other way around.&lt;/p&gt;
&lt;p&gt;Now, I had already found an excellent &lt;a href=&#34;https://addons.mozilla.org/en-US/firefox/addon/3607&#34;&gt;Nagios Checker Firefox extension&lt;/a&gt; but then I would need to have Firefox open all the time, which I don&#39;t.&lt;br /&gt;
So at first I wanted to write my own panel plugin that would let me allow seeing the most important Nagios status information but then I came across the coolest Xfce panel plugin of them all: the &lt;a href=&#34;http://goodies.xfce.org/projects/panel-plugins/xfce4-genmon-plugin&#34;&gt;Genmon plugin&lt;/a&gt;.  This is a plugin which you can add as many times to your panel as you want, and for each instance you can configure a script that it should run, and the frequency of it.  Like this you can create your own simple scripts (in php, bash, perl, python,...) which generate content (eg: text and images to be shown on the panel, tooltip, on-click action etc) and the Genmon plugin takes care of the rest.&lt;/p&gt;
&lt;p&gt;This is exactly what I&#39;ve done and in less then an hour everything was working just like I wanted :-)&lt;br /&gt;
Well, not exactly: apparently the on-click action is bound to the image you show.  I would rather show no image at all and just show text with an on-click action bound to it, but this seems not possible so I had to use an icon.  This made my panel a bit larger (as text is shown beneath the icon, you can&#39;t configure it to place it next to it) Also it would be neat if I could work with colors: red for hosts who are down, green for those who are up etc.  Some details I could achieve if I would make my hands dirty, but for now I don&#39;t have time to enhance the Genmon plugin or to write my own, so I just live with it ;-)&lt;/p&gt;
&lt;p&gt;Anyways, enough talk.&lt;/p&gt;
&lt;p&gt;Here is a screenshot:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://dieter.plaetinck.be/files/xfce_genmon_nagios_script.png&#34;/&gt;&lt;/p&gt;
&lt;p&gt;The cursor is not on the screenshot but I was obviously hoovering over the panel plugin to show the tooltip.&lt;br /&gt;
You can also see at the left the notes plugin and the mail checker plugin and at the right the volume control, trash applet, battery monitor, systray, clock and action button(s) panel plugins.&lt;/p&gt;
&lt;p&gt;And here is the source code of my bash script&lt;/p&gt;
{{&lt; highlight &#34;bash&#34; &#34;style=default&#34; &gt;}}
#!/bin/bash

#
# Written by Dieter Plaetinck
# Licensed under the GPL V3
# See gnu.org/licenses/gpl-3.0.html
#
# works for Nagios 2.x No idea about 3.x 


URL=https://&lt;yourhost&gt;/nagios/cgi-bin/tac.cgi
USERNAME=username
PASSWORD=password

PAGE=$(curl -s -k -u $USERNAME:$PASSWORD $URL)
HOSTS_DOWN=$(           echo -e &#34;$PAGE&#34; | grep &#34;hoststatustypes=4&#39; class=&#39;hostHeader&#39;&#34; | awk &#39;{print $5}&#39; | cut -c 20-)
HOSTS_UNREACHABLE=$(    echo -e &#34;$PAGE&#34; | grep &#34;hoststatustypes=8&#39; class=&#39;hostHeader&#39;&#34; | awk &#39;{print $5}&#39; | cut -c 20-)
HOSTS_UP=$(             echo -e &#34;$PAGE&#34; | grep &#34;hoststatustypes=2&#39; class=&#39;hostHeader&#39;&#34; | awk &#39;{print $5}&#39; | cut -c 20-)
HOSTS_PENDING=$(        echo -e &#34;$PAGE&#34; | grep &#34;hoststatustypes=1&#39; class=&#39;hostHeader&#39;&#34; | awk &#39;{print $5}&#39; | cut -c 20-)

SERVICES_CRIT=$(        echo -e &#34;$PAGE&#34; | grep &#34;servicestatustypes=16&#39; class=&#39;serviceHeader&#39;&#34; | awk &#39;{print $5}&#39; | cut -c 23-)
SERVICES_WARN=$(        echo -e &#34;$PAGE&#34; | grep &#34;servicestatustypes=4&#39; class=&#39;serviceHeader&#39;&#34; | awk &#39;{print $5}&#39; | cut -c 23-)
SERVICES_UNKNOWN=$(     echo -e &#34;$PAGE&#34; | grep &#34;servicestatustypes=8&#39; class=&#39;serviceHeader&#39;&#34; | awk &#39;{print $5}&#39; | cut -c 23-)
SERVICES_OK=$(          echo -e &#34;$PAGE&#34; | grep &#34;servicestatustypes=2&#39; class=&#39;serviceHeader&#39;&#34; | awk &#39;{print $5}&#39; | cut -c 23-)
SERVICES_PENDING=$(     echo -e &#34;$PAGE&#34; | grep &#34;servicestatustypes=1&#39; class=&#39;serviceHeader&#39;&#34; | awk &#39;{print $5}&#39; | cut -c 23-)
echo &#34;&lt;img&gt;scripts/nagios.gif&lt;/img&gt;&#34;
echo &#34;&lt;txt&gt;$HOSTS_DOWN-$SERVICES_CRIT/$SERVICES_WARN&lt;/txt&gt;&#34;
echo &#34;&lt;tool&gt;Hosts: $HOSTS_DOWN down / $HOSTS_UNREACHABLE unreachable / $HOSTS_UP up / $HOSTS_PENDING pending
Services: $SERVICES_CRIT crit / $SERVICES_WARN warn / $SERVICES_UNKNOWN unknown / $SERVICES_OK ok / $SERVICES_PENDING pending&lt;/tool&gt;&#34;
echo &#34;&lt;click&gt;firefox https://&lt;yourhost&gt;/nagios&lt;/click&gt;&#34;
{{&lt; /highlight &gt;}}&lt;p&gt;At my company we use https, If you use http I don&#39;t know if the authentication method is the same. If not check the -d flag for curl.&lt;br /&gt;
The icon is just one I took from the nagios page and resized it a bit.  The script will be running in your home directory (even though you can put it anywhere you want)&lt;/p&gt;
&lt;p&gt;PS: does anyone know a good Apple Keychain- like daemon that I can query from other scripts to receive passwords? Preferably GTK ones that do not pull in Gnome deps.  So I don&#39;t have to store passwords in cleartext... (and I need this anyway for other purposes :p)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I just became a &#34;System &amp; Network Architect&#34;</title>
      <link>http://dieter.plaetinck.be/post/i_just_became_a_system_and_network_architect/</link>
      <pubDate>Tue, 17 Apr 2007 20:11:07 -0400</pubDate>
      
      <guid>12 at http://dieter.plaetinck.be</guid>
      <description>keeping the &#34;lower level&#34; (hardware, network, databases) secure, stable and performing well.&lt;br /&gt;
There will be quite some variety: working together with the dev-team, optimizing where possible, but also testing fancy hardware and software setups, hacking some code, deciding which routes we&#39;ll take and administering the systems.&lt;br /&gt;
Of course it will be in a &lt;a href=&#34;http://en.wikipedia.org/wiki/Free_software&#34;&gt;sane&lt;/a&gt; &lt;a href=&#34;http://en.wikipedia.org/wiki/Open_standard&#34;&gt;environment&lt;/a&gt; :-)  Otherwise I would never have signed.&lt;/p&gt;
&lt;p&gt;Those who know me well will see that all this stuff is actually the kind of things I&#39;m messing with in my spare time (among others of course), so these are things that I&#39;m really interested in.  I&#39;m anxious to start, I even already have a few ideas in my head for stuff I want to check/propose, but of course I&#39;ll have to wait a bit:  I have to finish my &lt;a href=&#34;http://dieter.plaetinck.be/masterproef&#34;&gt;thesis&lt;/a&gt;, then exams, then (hopefully ;-) ) graduate and after a small vacation my term starts.&lt;/p&gt;
&lt;p&gt;PS: We (I can say this now ;-) are still hiring, check our &lt;a href=&#34;http://incrowd.be/jobs.html&#34;&gt;jobs&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;UPDATE: Incrowd &lt;a href=&#34;http://corporate.netlog.com/blog/2007/04/facebox-becomes-netlog/&#34;&gt;has become&lt;/a&gt; &lt;a href=&#34;http://nl.netlog.com/&#34;&gt;Netlog&lt;/a&gt; &lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
