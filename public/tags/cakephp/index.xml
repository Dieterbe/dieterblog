<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cakephp on Dieter&#39;s blog</title>
    <link>http://localhost:1313/tags/cakephp/</link>
    <description>Recent content in cakephp on Dieter&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Jan 2009 22:16:52 -0400</lastBuildDate><atom:link href="http://localhost:1313/tags/cakephp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CakePHP and a paradigm shift to a code generation based approach?</title>
      <link>http://localhost:1313/posts/cakephp_and_a_paradigm_shift_to_a_code_generation_based_approach/</link>
      <pubDate>Mon, 19 Jan 2009 22:16:52 -0400</pubDate>
      
      <guid>http://localhost:1313/posts/cakephp_and_a_paradigm_shift_to_a_code_generation_based_approach/</guid>
      
      <description>&lt;p&gt;At my &lt;a href=&#34;http://localhost:1313/jobhunt_over&#34;&gt;new job&lt;/a&gt;, I&#39;m writing a quite full-featured web application.&lt;br /&gt;
I&#39;ve choosen to use CakePHP.&lt;br /&gt;
Why? Well, it may be 2 years since I last used it, but I&#39;ve followed the project and it&#39;s planet, and it seems to have matured and gained even more monumentum.&lt;br /&gt;
I want to use something that is widely used so there is plenty of stuff available for it, it&#39;s RAD, it&#39;s flexible and powerful.&lt;br /&gt;
I noticed things such as CLI support and documentation have improved tremendously too.&lt;/p&gt;
&lt;p&gt;However, I find that still, the recommended (or at least &#34;most commonly used&#34;) practices are not as efficient as they could be, and that emphasis is placed on the wrong aspects.&lt;br /&gt;
See, even though the &lt;a href=&#34;http://book.cakephp.org/view/113/Code-Generation-with-Bake&#34;&gt;bake&lt;/a&gt; tool has come a long way since I last used it, it&#39;s still used to &#34;generate some standard models/controllers/views&#34; and the developer can take it from there [further editing the resulting files himself].&lt;br /&gt;
Finetuning generated code by editing the templates (in fact, only views have templates; the php code of models and controllers is hardcoded in the scripts that generate them), is still an obscure practice...&lt;br /&gt;
Also, there are very few commandline switches (Right now you can choose your app dir, whether you want to bake a model,controller or view, and it&#39;s name.)&lt;br /&gt;
All other things (validation rules, associatons, index/view/edit/add actions/views, which components, overwrite yes/no etc) are all handled interactively.&lt;br /&gt;
There are also some smaller enoyances such as when you specify one option like the name of the model, it assumes you don&#39;t want interactivity and produces a model containing nothing more then the class definition and the membervariable $name, which is usually worthless.&lt;br /&gt;
One thing that is pretty neat though, If you update $this-&gt;recursive in a model, the baked views will contain stuff for the associated things.  But so much more could be done...&lt;br /&gt;
</description>
      
    </item>
    
    <item>
      <title>Bye CakePHP, bye dAuth... Hello Drupal!</title>
      <link>http://localhost:1313/posts/bye_cakephp_bye_dauth_hello_drupal/</link>
      <pubDate>Thu, 19 Jul 2007 00:34:51 -0400</pubDate>
      
      <guid>http://localhost:1313/posts/bye_cakephp_bye_dauth_hello_drupal/</guid>
      
      <description>&lt;p&gt;I&#39;m afraid the time has come to say goodbye to CakePHP, and to the projects I&#39;ve been working on for it.&lt;br /&gt;
I still like Cake ... In fact, the further development of 1.2 goes the more I like it (well, generally spoken that is ... because there are some minor things I don&#39;t like but that&#39;s not important now).  The truth of the matter is I like to develop, I like the php language and I enjoy working with Cake.&lt;br /&gt;
But .. all the sites I currently work on are all community sites or blogs</description>
      
    </item>
    
    <item>
      <title>dAuth</title>
      <link>http://localhost:1313/posts/dauth/</link>
      <pubDate>Mon, 02 Jul 2007 13:19:14 -0400</pubDate>
      
      <guid>http://localhost:1313/posts/dauth/</guid>
      
      <description>dAuth is a secure authentication system for CakePHP.
It uses techniques such as the challenge-response paradigm, customizable multiple-stage password hashing, brute force (hammering) detection, session hijacking prevention etc.
Read all about it
You can download the files separately on the before mentioned page or get the tarball that somebody was kind enough to create.
(damn I&#39;m lazy today)
I don&#39;t maintain this any more!</description>
      
    </item>
    
    <item>
      <title>Getting statistics about events that don&#39;t trigger page requests with Google Analytics</title>
      <link>http://localhost:1313/posts/getting_statistics_about_events_that_dont_trigger_page_requests_with_google_analytics/</link>
      <pubDate>Sun, 24 Jun 2007 19:27:42 -0400</pubDate>
      
      <guid>http://localhost:1313/posts/getting_statistics_about_events_that_dont_trigger_page_requests_with_google_analytics/</guid>
      
      <description>&lt;p&gt;You probably already heard of &lt;a href=&#34;www.google.com/analytics&#34;&gt;Google Analytics&lt;/a&gt;.  It&#39;s a pretty nice program that (&lt;em&gt;basically&lt;/em&gt;) gathers data about visits of your site and creates reports of it.  It works by including some JavaScript code on your page, so that each page request triggers a call to the Analytics tracker sending along some data such as which page is requested and which resolution was used. (no personal or other privacy-sensitive data is sent).  But here is the deal!  I just discovered that you can also track &lt;a href=&#34;http://www.google.com/support/googleanalytics/bin/answer.py?answer=55597&amp;amp;topic=11012&#34;&gt;events that don&#39;t require page requests!&lt;/a&gt;&lt;br /&gt;
Think of links to files or to external locations, JavaScript events (Ajax anyone?) or even Flash events (but who is crazy enough to use Flash anyway?).</description>
      
    </item>
    
    <item>
      <title>Drag &#39;n drop tutorial with the CakePHP 1.2 Ajax helper, Prototype framework and Scriptaculous library</title>
      <link>http://localhost:1313/posts/drag_n_drop_tutorial_with_cakephp_ajax_prototype_scriptaculous/</link>
      <pubDate>Tue, 29 May 2007 21:25:13 -0400</pubDate>
      
      <guid>http://localhost:1313/posts/drag_n_drop_tutorial_with_cakephp_ajax_prototype_scriptaculous/</guid>
      
      <description>&lt;h3&gt;Introduction&lt;/h3&gt;
&lt;p&gt;During the development of my &lt;a href=&#34;http://localhost:1313/masterproef&#34;&gt;thesis&lt;/a&gt; I wanted to create a drag &#39;n drop interface.  But I never did anything like that, I never used CakePHP&#39;s Ajax helper and neither made I ever use of more advanced functionalities of Scriptaculous/Prototype.  Hell I even never touched Ajax before this! &lt;/p&gt;
&lt;p&gt;Although there are some basic CakePHP/Ajax tutorials out there, I still had a hard time because some knowledge about Ajax (in CakePHP) was assumed in all of those.  After a lot of googling I even found a tutorial called &lt;a href=&#34;http://www.dustinweber.com/blog/_archives/2007/4/4/2859177.html&#34;&gt;CakePHP: Sortable AJAX Drag &amp;amp; Drops - The Basics&lt;/a&gt;  &lt;br/&gt;&#34;Perfect!&#34; I thought, until after staring at the article for a long while and I started to notice nowhere in the article &#34;$ajax-&gt;drag&#34;, &#34;$ajax-&gt;drop&#34; or &#34;$ajax-&gt;dropRemote&#34; is used.  (those are calls on the CakePHP Ajax helper to enhance objects to become draggable, or to become a dropbox where draggables can be dropped into).  So the only more or less suited tutorial about drag &#39;n drop was actually about sorting and didn&#39;t use the drag/drop function calls at all.  Even though it contains very useful information.&lt;/p&gt;
&lt;p&gt;Long story short:  I finally got it working (thanks to Krazylegz and kristofer and possibly others too, it has been a while so I may forget someone ;-), and learned a lot in the process.  I will share what I learned with you guys so that hopefully it&#39;s a bit easier for you then what I had to go through.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Figuring out CakePHP&#39;s new AuthComponent</title>
      <link>http://localhost:1313/posts/figuring_out_cakephp_new_authcomponent/</link>
      <pubDate>Sat, 07 Apr 2007 15:52:48 -0400</pubDate>
      
      <guid>http://localhost:1313/posts/figuring_out_cakephp_new_authcomponent/</guid>
      
      <description>&lt;p&gt;In the Cake community, there has always been much interest in authentication/authorization systems.  The issue of authentication has been addressed in several add-ons provided by the community, such as &lt;a href=&#34;http://bakery.cakephp.org/articles/view/147&#34;&gt;DAuth&lt;/a&gt; (written by me), &lt;a href=&#34;http://bakery.cakephp.org/articles/view/99&#34;&gt;OthAuth&lt;/a&gt; (written by &lt;a href=&#34;http://www.devmoz.com/blog&#34;&gt;Crazylegs&lt;/a&gt;) and &lt;a href=&#34;http://bakery.cakephp.org/tags/view/auth&#34;&gt;many others&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, one of the additions to the 1.2 branch which is currently in active development , is a built-in auth module.  A module that isn&#39;t finished yet but it sure is worth it looking at.  (In fact I&#39;m thinking about making a new dAuth version built on cake&#39;s own auth system.).  As most bakers know, there is very little information about the 1.2 branch in general, and the auth component in specific.  So what I will try to do, is delve in the code, mess with it, and explain my findings in this post.  </description>
      
    </item>
    
    <item>
      <title>Fosdem 2007 review</title>
      <link>http://localhost:1313/posts/fosdem_2007_review/</link>
      <pubDate>Thu, 15 Mar 2007 21:02:41 -0400</pubDate>
      
      <guid>http://localhost:1313/posts/fosdem_2007_review/</guid>
      
      <description>&lt;p&gt;Every year, during a special weekend in February, the &lt;a href=&#34;http://www.ulb.ac.be/&#34;&gt;University Libre of Brussels&lt;/a&gt; suddenly becomes a little more geeky.&lt;br /&gt;
It&#39;s that time of the year when many European (and some inter-continental) colleagues join us at&lt;br /&gt;
&lt;a href=&#34;http://www.fosdem.org&#34;&gt;Fosdem: the Free and Open source Software Developers&#39; European Meeting&lt;/a&gt; (more info &lt;a href=&#34;http://www.fosdem.org/about/fosdem&#34;&gt;here&lt;/a&gt;).&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Hello world!</title>
      <link>http://localhost:1313/posts/blogpost1_hello_world/</link>
      <pubDate>Sun, 04 Mar 2007 14:45:36 -0400</pubDate>
      
      <guid>http://localhost:1313/posts/blogpost1_hello_world/</guid>
      
      <description>Finally, my own website...
I already wanted to get this up for a long time. My initial idea was writing (and styling) it all from scratch using the marvelous CakePHP framework along with an authentication system i wrote, dAuth.
However, due to my lack of time I decided to use the excellent drupal platform, of which I&#39;m quite sure will get the job done equally well, while drastically liberating my time, so I can invest it in other projects :-)</description>
      
    </item>
    
  </channel>
</rss>
